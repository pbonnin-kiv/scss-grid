@mixin apply($list){
  @each $toapply in $list {
    @extend .#{$toapply};
  }
}

/**
* Build a media query, mobile firstly.
* Requires at least one breakpoint value to work.
* You can use registered breakpoints (s) or absolute values (1300px).
* First breakpoint value will be considered as a max-width, while second value will be min-width.
* ex. : @include resp(s) => @media screen and (max-width:620px)
* ex. : @include resp(m, s) => @media screen and (max-width:768px) and (min-width:620px)
*/
@mixin resp($bps){
  $max : 0px;

  @if length($bps) > 2{
    @error "Maximum 2 breakpoints values are allowed to build a media query.";
  }

  @each $name in $bps{
    // If an absolute value is used, check if that value is registered or not in breakpoints map.
    // This is just an indication.
    @if map-has-key($breakpoints, $name) == false{
      @if index(map-values($breakpoints),$name) == null{
        @debug "Breakpoint absolute value used ( #{$name} ). Register it if widely used.";
      }@else{
        @debug "Duplicate breakpoint : absolute value \"#{$name}\" is also available with mapped breakpoints.";
      }
    }

    @if type-of($name) == "number"{
      @if $name > $max{
        $max : $name;
      }
    }@else if type-of($name) == "string"{
      @if map_get($breakpoints, $name) > $max {
        $max : map_get($breakpoints, $name);
      }
    }@else{
      @error "Type error : #{$name}";
    }
  }


  $str : "";
  @each $name in $bps{
    @if type-of($name) == "number"{
      $str : "#{$str} and (min-width:#{$name + 1px})";
    }@else if type-of($name) == "string"{
      $str : "#{$str} and (min-width:#{map_get($breakpoints, $name) + 1px})";
    }
  }

  @if $str != ""{
    @media screen#{$str}{
      @content;
    }
  }
}
